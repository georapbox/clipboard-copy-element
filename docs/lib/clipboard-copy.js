function t(t,e,i){if(!e.has(t))throw new TypeError("attempted to "+i+" private field on non-instance");return e.get(t)}function e(t,e){return e.get?e.get.call(t):e.value}function i(i,s){return e(i,t(i,s,"get"))}function s(t,e){if(e.has(t))throw new TypeError("Cannot initialize the same private elements twice on an object")}function n(t,e,i){s(t,e),e.set(t,i)}function o(t,e,i){if(e.set)e.set.call(t,i);else{if(!e.writable)throw new TypeError("attempted to set read only private field");e.value=i}}function a(e,i,s){return o(e,t(e,i,"set"),s),s}function r(t,e,i){if(!e.has(t))throw new TypeError("attempted to get private field on non-instance");return i}function l(t,e){s(t,e),e.add(t)}const h=document.createElement("template");h.innerHTML='\n  <slot name="button"><button type="button" part="button"><slot name="button-content">Copy</slot></button></slot>\n';var d=new WeakMap,c=new WeakMap,u=new WeakSet,b=new WeakSet,p=new WeakMap,m=new WeakMap,f=new WeakSet;class v extends HTMLElement{static get observedAttributes(){return["disabled"]}connectedCallback(){r(this,f,g).call(this,"value"),r(this,f,g).call(this,"from"),r(this,f,g).call(this,"disabled"),i(this,d)&&i(this,d).addEventListener("slotchange",i(this,m)),i(this,c)&&i(this,c).addEventListener("click",i(this,p))}disconnectedCallback(){i(this,d).removeEventListener("slotchange",i(this,m)),i(this,c)&&i(this,c).removeEventListener("click",i(this,p))}attributeChangedCallback(t){"disabled"===t&&i(this,c)&&(i(this,c).disabled=this.disabled,i(this,c).setAttribute("aria-disabled",this.disabled),i(this,c).part&&i(this,c).part.contains("button")&&i(this,c).part.toggle("button--disabled",this.disabled))}get disabled(){return this.hasAttribute("disabled")}set disabled(t){t?this.setAttribute("disabled",""):this.removeAttribute("disabled")}get value(){return this.getAttribute("value")}set value(t){this.setAttribute("value",t)}get from(){return this.getAttribute("from")}set from(t){this.setAttribute("from",t)}static defineCustomElement(t="clipboard-copy"){"undefined"==typeof window||window.customElements.get(t)||window.customElements.define(t,v)}constructor(){super(),l(this,u),l(this,b),l(this,f),n(this,d,{writable:!0,value:void 0}),n(this,c,{writable:!0,value:void 0}),n(this,p,{writable:!0,value:t=>{t.preventDefault(),this.disabled||(this.dispatchEvent(new Event("clipboard-copy:click",{bubbles:!0,composed:!0})),r(this,u,w).call(this))}}),n(this,m,{writable:!0,value:t=>{t.target&&"button"===t.target.name&&(i(this,c)&&i(this,c).removeEventListener("click",i(this,p)),a(this,c,r(this,b,E).call(this)),i(this,c)&&(i(this,c).addEventListener("click",i(this,p)),"BUTTON"===i(this,c).nodeName||i(this,c).hasAttribute("role")||i(this,c).setAttribute("role","button")))}}),this.shadowRoot||(this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(h.content.cloneNode(!0))),a(this,d,this.shadowRoot.querySelector('slot[name="button"]')),a(this,c,r(this,b,E).call(this))}}async function w(){if(this.value||this.from)try{let t="";if(this.value)t=this.value;else if(this.from){const e=("getRootNode"in Element.prototype?i(this,c).getRootNode({composed:!0}):i(this,c).ownerDocument).querySelector(this.from);if(!e)return;t=e instanceof HTMLInputElement||e instanceof HTMLTextAreaElement?e.value:e instanceof HTMLAnchorElement&&e.hasAttribute("href")?e.href:e.textContent}await navigator.clipboard.writeText(t),this.dispatchEvent(new CustomEvent("clipboard-copy:success",{bubbles:!0,composed:!0,detail:{value:t}}))}catch(t){this.dispatchEvent(new CustomEvent("clipboard-copy:error",{bubbles:!0,composed:!0,detail:{error:t}}))}}function E(){return i(this,d)?i(this,d).assignedElements({flatten:!0}).find((t=>"BUTTON"===t.nodeName||"button"===t.getAttribute("slot"))):null}function g(t){if(Object.prototype.hasOwnProperty.call(this,t)){const e=this[t];delete this[t],this[t]=e}}export{v as ClipboardCopy};
//# sourceMappingURL=clipboard-copy.js.map
